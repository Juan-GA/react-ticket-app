{"version":3,"sources":["context/SocketContext.js","hooks/useSocket.js","context/UiContext.js","hooks/useHideMenu.js","helpers/getUsuarioStorage.js","pages/Ingresar.js","helpers/getUltimos.js","pages/Cola.js","pages/CrearTicket.js","pages/Escritorio.js","pages/RouterPage.js","TicketApp.js","index.js"],"names":["SocketContext","createContext","SocketProvider","children","serverPath","socket","useMemo","io","connect","transports","useState","online","setOnline","useEffect","connected","on","useSocket","Provider","value","UiContext","UiProvider","ocultarMenu","setOcultarMenu","showMenu","hideMenu","useHideMenu","ocultar","useContext","getUsuarioStorage","agente","localStorage","getItem","escritorio","Title","Typography","Text","layout","labelCol","span","wrapperCol","tailLayout","offset","Ingresar","history","useHistory","usuario","to","level","name","initialValues","remember","onFinish","setItem","push","onFinishFailed","errorInfo","console","log","Item","label","rules","required","message","min","max","type","htmlType","shape","SaveOutlined","getUltimos","a","fetch","resp","json","data","ultimos","Cola","tickets","setTickets","asignados","off","then","dataSource","slice","renderItem","item","style","width","marginTop","actions","color","numero","Meta","title","description","CrearTicket","ticket","setTicket","align","icon","DownloadOutlined","size","onClick","emit","fontSize","Escritorio","clear","replace","CloseCircleOutlined","RightOutlined","Sider","Layout","Content","RouterPage","height","collapsedWidth","breakpoint","hidden","className","theme","mode","defaultSelectedKeys","UserOutlined","VideoCameraOutlined","UploadOutlined","margin","padding","minHeight","path","component","TicketApp","ReactDOM","render","document","getElementById"],"mappings":"0MAGaA,EAAgBC,0BAEhBC,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAE7B,ECHqB,SAAEC,GAEvB,IAAMC,EAASC,mBAAS,kBAAOC,KAAGC,QAASJ,EAAY,CACnDK,WAAY,CAAC,iBACb,CAAEL,IAEN,EAA8BM,oBAAS,GAAvC,mBAAQC,EAAR,KAAgBC,EAAhB,KAsBA,OApBAC,qBAAU,WACND,EAAWP,EAAOS,aACjB,CAAET,IAEPQ,qBAAW,WAEPR,EAAOU,GAAG,WAAW,WACrBH,GAAW,QAGZ,CAAEP,IAELQ,qBAAW,WAEPR,EAAOU,GAAG,cAAc,WACxBH,GAAW,QAGZ,CAAEP,IAEE,CACHA,SACAM,UD3BuBK,CAAU,8CAA7BX,EAAR,EAAQA,OAAQM,EAAhB,EAAgBA,OAEhB,OACI,cAACX,EAAciB,SAAf,CAAwBC,MAAO,CAAEb,SAAQM,UAAzC,SACMR,KETDgB,EAAYlB,0BAEZmB,EAAa,SAAC,GAAkB,IAAhBjB,EAAe,EAAfA,SAEzB,EAAwCO,oBAAS,GAAjD,mBAAQW,EAAR,KAAqBC,EAArB,KAUA,OACI,cAACH,EAAUF,SAAX,CAAoBC,MAAO,CACvBG,cACAE,SAXS,WACbD,GAAgB,IAWZE,SARS,WACbF,GAAgB,KAIhB,SAKMnB,K,oICnBDsB,EAAc,SAAEC,GAEzB,MAA+BC,qBAAYR,GAAnCI,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAElBX,qBAAU,WAEDa,EACDF,IAEAD,MAGL,CAAEG,EAASF,EAAUD,KCbfK,EAAoB,WAC7B,MAAO,CACHC,OAAQC,aAAaC,QAAQ,UAC7BC,WAAYF,aAAaC,QAAQ,gBCEjCE,EAAgBC,IAAhBD,MAAOE,EAASD,IAATC,KAETC,EAAS,CACXC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAEhBE,EAAa,CACjBD,WAAY,CAAEE,OAAQ,EAAGH,KAAM,KAGtBI,EAAW,WAEpB,IAAMC,EAAUC,cAChB,EAAoBlC,mBAAUkB,KAAtBiB,EAAR,oBAEApB,GAAY,GAcZ,OAAKoB,EAAQhB,QAAUgB,EAAQb,WACpB,cAAC,IAAD,CAAUc,GAAG,gBAIpB,qCACI,cAACb,EAAD,CAAOc,MAAQ,EAAf,sBACA,cAACZ,EAAD,0DACA,cAAC,IAAD,IAEA,eAAC,IAAD,2BACQC,GADR,IAEIY,KAAK,QACLC,cAAe,CAAEC,UAAU,GAC3BC,SA1BK,SAAC,GAA4B,IAA1BtB,EAAyB,EAAzBA,OAAQG,EAAiB,EAAjBA,WAExBF,aAAasB,QAAQ,SAAUvB,GAC/BC,aAAasB,QAAQ,aAAcpB,GAEnCW,EAAQU,KAAK,gBAsBLC,eAnBW,SAACC,GACpBC,QAAQC,IAAI,UAAWF,IAanB,UAOI,cAAC,IAAKG,KAAN,CACIC,MAAM,oBACNX,KAAK,SACLY,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,gCAHvC,SAKI,cAAC,IAAD,MAGJ,cAAC,IAAKJ,KAAN,CACIC,MAAM,aACNX,KAAK,aACLY,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,uCAHvC,SAKI,cAAC,IAAD,CAAaC,IAAM,EAAIC,IAAM,OAGjC,cAAC,IAAKN,KAAN,2BAAelB,GAAf,aACI,eAAC,IAAD,CAAQyB,KAAK,UAAUC,SAAS,SAASC,MAAM,QAA/C,UACI,cAACC,EAAA,EAAD,IADJ,yB,sECpEPC,EAAU,uCAAG,8BAAAC,EAAA,sEAEHC,MAAM,qDAFH,cAEhBC,EAFgB,gBAIHA,EAAKC,OAJF,cAIhBC,EAJgB,yBAMfA,EAAKC,SANU,2CAAH,qDCIf1C,EAAgBC,IAAhBD,MAAOE,EAASD,IAATC,KAGFyC,EAAO,WAEhBnD,GAAY,GAEZ,IAAQpB,EAAWsB,qBAAY3B,GAAvBK,OACR,EAAgCK,mBAAS,IAAzC,mBAAQmE,EAAR,KAAiBC,EAAjB,KAgBA,OAdAjE,qBAAU,WAKN,OAHAR,EAAOU,GAAG,mBAAmB,SAAEgE,GAC3BD,EAAYC,MAET,WACH1E,EAAO2E,IAAI,sBAEhB,CAAE3E,IAELQ,qBAAU,WACNwD,IAAaY,MAAM,SAAAJ,GAAO,OAAIC,EAAYD,QAC3C,IAGC,qCACI,cAAC,EAAD,CAAO9B,MAAQ,EAAf,mCACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAKT,KAAO,GAAZ,SACI,cAAC,IAAD,CACI4C,WAAaL,EAAQM,MAAM,EAAE,GAC7BC,WAAa,SAAAC,GAAI,OACb,cAAC,IAAK3B,KAAN,UAEI,cAAC,IAAD,CACI4B,MAAO,CAAEC,MAAO,IAAKC,UAAW,IAChCC,QAAS,CACL,eAAC,IAAD,CAAKC,MAAM,UAAX,cAAwBL,EAAKxD,UAC7B,eAAC,IAAD,CAAK6D,MAAM,UAAX,0BAAoCL,EAAKrD,eAJjD,SAOI,eAAC,EAAD,mBAAcqD,EAAKM,mBAOvC,eAAC,IAAD,CAAKrD,KAAO,GAAZ,UACI,cAAC,IAAD,0BACA,cAAC,IAAD,CACI4C,WAAaL,EAAQM,MAAM,GAC3BC,WAAa,SAAAC,GAAI,OACb,cAAC,IAAK3B,KAAN,UACI,cAAC,IAAKA,KAAKkC,KAAX,CACIC,MAAK,qBAAkBR,EAAKM,QAC5BG,YACI,qCACI,cAAC,EAAD,CAAM7B,KAAK,YAAX,gCACA,cAAC,IAAD,CAAKyB,MAAM,UAAX,SAAuBL,EAAKM,SAC5B,cAAC,EAAD,CAAM1B,KAAK,YAAX,sBACA,cAAC,IAAD,CAAKyB,MAAM,UAAX,SAAuBL,EAAKxD,6B,SC7DhEI,EAAgBC,IAAhBD,MAAOE,EAASD,IAATC,KAEF4D,EAAc,WAEvBtE,GAAY,GAEZ,IAAQpB,EAAWsB,qBAAY3B,GAAvBK,OACR,EAA8BK,mBAAS,MAAvC,mBAAQsF,EAAR,KAAgBC,EAAhB,KAQA,OACI,qCACI,cAAC,IAAD,UACI,eAAC,IAAD,CAAK3D,KAAO,GAAKG,OAAS,EAAIyD,MAAM,SAApC,UACI,cAAC,EAAD,CAAOnD,MAAQ,EAAf,uDAIA,cAAC,IAAD,CACIkB,KAAK,UACLE,MAAM,QACNgC,KAAO,cAACC,EAAA,EAAD,IACPC,KAAK,QACLC,QAnBA,WAChBjG,EAAOkG,KAAK,mBAAoB,MAAM,SAAEP,GACpCC,EAAWD,OAYH,+BAaJA,GACI,cAAC,IAAD,CAAKV,MAAO,CAAEE,UAAW,KAAzB,SACI,eAAC,IAAD,CAAKlD,KAAO,GAAKG,OAAS,EAAIyD,MAAM,SAApC,UACI,cAAC,EAAD,CAAMnD,MAAQ,EAAd,0BAGA,uBACA,cAAC,EAAD,CAAMkB,KAAK,UAAUqB,MAAO,CAAEkB,SAAU,IAAxC,SACMR,EAAOL,kB,iBC1CjC1D,EAAgBC,IAAhBD,MAAOE,GAASD,IAATC,KAEFsE,GAAa,WAEtBhF,GAAY,GACZ,MAAoBf,mBAAUkB,KAAtBiB,EAAR,oBACQxC,EAAWsB,qBAAY3B,GAAvBK,OACR,EAA8BK,mBAAS,MAAvC,mBAAQsF,EAAR,KAAgBC,EAAhB,KACMtD,EAAUC,cAahB,OAAMC,EAAQhB,QAAWgB,EAAQb,WAK7B,qCACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAKM,KAAO,GAAZ,UACI,cAAC,EAAD,CAAOS,MAAQ,EAAf,SAAqBF,EAAQhB,SAC7B,cAAC,GAAD,0DACA,cAAC,GAAD,CAAMoC,KAAK,UAAX,SAAuBpB,EAAQb,gBAGnC,cAAC,IAAD,CAAKM,KAAO,EAAI4D,MAAM,QAAtB,SACI,eAAC,IAAD,CACI/B,MAAM,QACNF,KAAK,SACLqC,QA5BN,WACVxE,aAAa4E,QACb/D,EAAQgE,QAAQ,cAuBJ,UAKI,cAACC,EAAA,EAAD,IALJ,gBAWR,cAAC,IAAD,IAGIZ,GACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,GAAD,uDACA,cAAC,GAAD,CACIV,MAAO,CAAEkB,SAAU,IACnBvC,KAAK,SAFT,SAIE+B,EAAOL,cAOzB,cAAC,IAAD,UACI,cAAC,IAAD,CAAKlD,OAAS,GAAKH,KAAO,EAAI4D,MAAM,QAApC,SACI,eAAC,IAAD,CACII,QApDI,WACpBjG,EAAOkG,KAAK,4BAA6B1D,GAAS,SAAEmD,GAChDC,EAAWD,OAmDC7B,MAAM,QACNF,KAAK,UAHT,UAKI,cAAC4C,EAAA,EAAD,IALJ,sBA5CL,cAAC,IAAD,CAAU/D,GAAG,eCRpBgE,GAAmBC,IAAnBD,MAAOE,GAAYD,IAAZC,QAEFC,GAAa,WAEtB,IAAQ5F,EAAgBM,qBAAYR,GAA5BE,YAER,OACI,cAAC,IAAD,UACI,eAAC,IAAD,CAAQiE,MAAO,CAAE4B,OAAQ,SAAzB,UACI,eAACJ,GAAD,CACIK,eAAe,IACfC,WAAW,KACXC,OAAShG,EAHb,UAKI,qBAAKiG,UAAU,SACf,eAAC,IAAD,CAAMC,MAAM,OAAOC,KAAK,SAASC,oBAAqB,CAAC,KAAvD,UACI,cAAC,IAAK/D,KAAN,CAAmByC,KAAM,cAACuB,EAAA,EAAD,IAAzB,SACI,cAAC,IAAD,CAAM5E,GAAG,YAAT,uBADW,KAKf,cAAC,IAAKY,KAAN,CAAmByC,KAAM,cAACwB,EAAA,EAAD,IAAzB,SACI,cAAC,IAAD,CAAM7E,GAAG,QAAT,8BADW,KAKf,cAAC,IAAKY,KAAN,CAAmByC,KAAM,cAACyB,EAAA,EAAD,IAAzB,SACI,cAAC,IAAD,CAAM9E,GAAG,SAAT,4BADW,WAOvB,cAAC,IAAD,CAAQwE,UAAU,cAAlB,SACI,cAACN,GAAD,CACIM,UAAU,yBACVhC,MAAO,CACPuC,OAAQ,YACRC,QAAS,GACTC,UAAW,KALf,SAQI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,YAAYC,UAAYvF,IACpC,cAAC,IAAD,CAAOsF,KAAK,QAAQC,UAAYrD,IAChC,cAAC,IAAD,CAAOoD,KAAK,SAASC,UAAYlC,IAEjC,cAAC,IAAD,CAAOiC,KAAK,cAAcC,UAAYxB,KACtC,cAAC,IAAD,CAAU3D,GAAG,2BCjE5BoF,GAAY,WACrB,OACI,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,GAAD,SCJhBC,IAASC,OACL,cAAC,GAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.025da7e3.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nimport { useSocket } from \"../hooks/useSocket\";\r\n\r\nexport const SocketContext = createContext();\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n\r\n    const { socket, online } = useSocket('https://react-socket-ticket.herokuapp.com/');\r\n\r\n    return (\r\n        <SocketContext.Provider value={{ socket, online }}>\r\n            { children }\r\n        </SocketContext.Provider>\r\n    )\r\n}","import { useEffect, useMemo, useState } from \"react\";\r\nimport { io } from \"socket.io-client\"\r\n\r\n\r\nexport const useSocket = ( serverPath ) => {\r\n\r\n    const socket = useMemo( () =>  io.connect( serverPath, {\r\n        transports: ['websocket']\r\n    }), [ serverPath ] );\r\n\r\n    const [ online, setOnline ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setOnline( socket.connected );\r\n      }, [ socket ])\r\n    \r\n    useEffect( () => {\r\n    \r\n        socket.on('connect', () => {\r\n        setOnline( true );\r\n        })\r\n    \r\n    }, [ socket ])\r\n    \r\n    useEffect( () => {\r\n    \r\n        socket.on('disconnect', () => {\r\n        setOnline( false );\r\n        })\r\n    \r\n    }, [ socket ])\r\n\r\n    return {\r\n        socket,\r\n        online\r\n    }\r\n}","import React, { createContext, useState } from 'react';\r\n\r\nexport const UiContext = createContext();\r\n\r\nexport const UiProvider = ({ children }) => {\r\n\r\n    const [ ocultarMenu, setOcultarMenu ] = useState(false);\r\n\r\n    const showMenu = () => {\r\n        setOcultarMenu( false );\r\n    }\r\n\r\n    const hideMenu = () => {\r\n        setOcultarMenu( true );\r\n    }\r\n\r\n    return (\r\n        <UiContext.Provider value={{\r\n            ocultarMenu,\r\n            showMenu,\r\n            hideMenu\r\n        }}>\r\n            { children }\r\n        </UiContext.Provider>\r\n    )\r\n}\r\n","import { useContext, useEffect } from 'react';\r\nimport { UiContext } from '../context/UiContext';\r\n\r\nexport const useHideMenu = ( ocultar ) => {\r\n\r\n    const { showMenu, hideMenu } = useContext( UiContext );\r\n\r\n    useEffect(() => {\r\n        \r\n        if ( ocultar ) {\r\n            hideMenu();\r\n        } else {\r\n            showMenu();\r\n        }\r\n\r\n    }, [ ocultar, hideMenu, showMenu ])\r\n\r\n}\r\n","\r\n\r\nexport const getUsuarioStorage = () => {\r\n    return {\r\n        agente: localStorage.getItem('agente'),\r\n        escritorio: localStorage.getItem('escritorio')\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { Form, Input, Button, InputNumber, Typography, Divider } from 'antd';\r\nimport { SaveOutlined } from '@ant-design/icons';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport { useHideMenu } from '../hooks/useHideMenu';\r\nimport { getUsuarioStorage } from '../helpers/getUsuarioStorage';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 14 }\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: { offset: 8, span: 14 }\r\n  };\r\n\r\nexport const Ingresar = () => {\r\n\r\n    const history = useHistory();\r\n    const [ usuario ] = useState( getUsuarioStorage() );\r\n\r\n    useHideMenu(false);\r\n\r\n    const onFinish = ({ agente, escritorio }) => {\r\n\r\n        localStorage.setItem('agente', agente);\r\n        localStorage.setItem('escritorio', escritorio);\r\n\r\n        history.push('/escritorio');\r\n    };\r\n    \r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    if ( usuario.agente && usuario.escritorio ) {\r\n        return <Redirect to=\"/escritorio\"/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Title level={ 2 }>Ingresar</Title>\r\n            <Text>Ingrese su nombre y número de escritorio</Text>\r\n            <Divider/>\r\n\r\n            <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                >\r\n                <Form.Item\r\n                    label=\"Nombre del agente\"\r\n                    name=\"agente\"\r\n                    rules={[{ required: true, message: 'Por favor ingrese su nombre' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Escritorio\"\r\n                    name=\"escritorio\"\r\n                    rules={[{ required: true, message: 'Ingrese el número de escritorio' }]}\r\n                >\r\n                    <InputNumber min={ 1 } max={ 99 } />\r\n                </Form.Item>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" shape=\"round\">\r\n                        <SaveOutlined />\r\n                        Ingresar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n","\r\n\r\nexport const getUltimos = async () => {\r\n\r\n    const resp = await fetch('https://react-socket-ticket.herokuapp.com/ultimos');\r\n\r\n    const data = await resp.json();\r\n\r\n    return data.ultimos;\r\n\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Card, Col, Divider, List, Row, Tag, Typography } from 'antd';\r\nimport { useHideMenu } from '../hooks/useHideMenu';\r\nimport { SocketContext } from '../context/SocketContext';\r\nimport { getUltimos } from '../helpers/getUltimos';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\n\r\nexport const Cola = () => {\r\n\r\n    useHideMenu(true);\r\n\r\n    const { socket } = useContext( SocketContext );\r\n    const [ tickets, setTickets ] = useState([]);\r\n\r\n    useEffect(() => {\r\n        \r\n        socket.on('ticket-asignado', ( asignados ) => {\r\n            setTickets( asignados );\r\n        })\r\n        return () => {\r\n            socket.off('ticket-asignado');\r\n        }\r\n    }, [ socket ])\r\n\r\n    useEffect(() => {\r\n        getUltimos().then( tickets => setTickets( tickets ) );\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Title level={ 1 }>Atendiendo al cliente</Title>\r\n            <Row>\r\n                <Col span={ 12 }>\r\n                    <List\r\n                        dataSource={ tickets.slice(0,3) }\r\n                        renderItem={ item => (\r\n                            <List.Item>\r\n                                {/* { item.agente } */}\r\n                                <Card\r\n                                    style={{ width: 300, marginTop: 16 }}\r\n                                    actions={[\r\n                                        <Tag color=\"volcano\"> { item.agente }</Tag>,\r\n                                        <Tag color=\"magenta\"> Escritorio: { item.escritorio }</Tag>\r\n                                    ]}\r\n                                >\r\n                                    <Title> No. { item.numero }</Title>\r\n                                </Card>\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                </Col>\r\n\r\n                <Col span={ 12 }>\r\n                    <Divider> Historial </Divider>\r\n                    <List\r\n                        dataSource={ tickets.slice(3) }\r\n                        renderItem={ item => (\r\n                            <List.Item>\r\n                                <List.Item.Meta\r\n                                    title={ `Ticket No. ${ item.numero }`}\r\n                                    description={\r\n                                        <>\r\n                                            <Text type=\"secondary\">En el escritorio: </Text>\r\n                                            <Tag color=\"magenta\">{ item.numero }</Tag>\r\n                                            <Text type=\"secondary\">Agente: </Text>\r\n                                            <Tag color=\"volcano\">{ item.agente }</Tag>\r\n                                        </>\r\n                                    }\r\n                                />\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport { Button, Col, Row, Typography } from 'antd';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\nimport { useHideMenu } from '../hooks/useHideMenu';\r\nimport { SocketContext } from '../context/SocketContext';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nexport const CrearTicket = () => {\r\n\r\n    useHideMenu(true);\r\n\r\n    const { socket } = useContext( SocketContext );\r\n    const [ ticket, setTicket ] = useState(null);\r\n\r\n    const nuevoTicket = () => {\r\n        socket.emit('solicitar-ticket', null, ( ticket ) => {\r\n            setTicket( ticket );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={ 14 } offset={ 6 } align=\"center\">\r\n                    <Title level={ 3 }>\r\n                        Presione el botón para un nuevo ticket\r\n                    </Title>\r\n\r\n                    <Button\r\n                        type=\"primary\"\r\n                        shape=\"round\"\r\n                        icon={ <DownloadOutlined /> }\r\n                        size=\"large\"\r\n                        onClick={ nuevoTicket }\r\n                    >\r\n                        Nuevo Ticket\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {\r\n                ticket && (\r\n                    <Row style={{ marginTop: 100 }}>\r\n                        <Col span={ 14 } offset={ 6 } align=\"center\">\r\n                            <Text level={ 2 }>\r\n                                Su número\r\n                            </Text>\r\n                            <br/>\r\n                            <Text type=\"success\" style={{ fontSize: 55 }}>\r\n                                { ticket.numero }\r\n                            </Text>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport { Button, Col, Divider, Row, Typography } from 'antd';\r\nimport { CloseCircleOutlined, RightOutlined } from '@ant-design/icons'\r\nimport { useHideMenu } from '../hooks/useHideMenu';\r\nimport { getUsuarioStorage } from '../helpers/getUsuarioStorage';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport { SocketContext } from '../context/SocketContext';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nexport const Escritorio = () => {\r\n\r\n    useHideMenu(false);\r\n    const [ usuario ] = useState( getUsuarioStorage() );\r\n    const { socket } = useContext( SocketContext );\r\n    const [ ticket, setTicket ] = useState(null);\r\n    const history = useHistory();\r\n\r\n    const salir = () => {\r\n        localStorage.clear();\r\n        history.replace('/ingresar');\r\n    }\r\n\r\n    const siguienteTicket = () => {\r\n        socket.emit('siguiente-ticket-trabajar', usuario, ( ticket ) => {\r\n            setTicket( ticket );\r\n        });\r\n    }\r\n\r\n    if ( !usuario.agente || !usuario.escritorio ) {\r\n        return <Redirect to=\"/ingresar\"/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={ 20 }>\r\n                    <Title level={ 2 }>{ usuario.agente }</Title>\r\n                    <Text>Usted está trabajando en el escritorio: </Text>\r\n                    <Text type=\"success\">{ usuario.escritorio }</Text>\r\n                </Col>\r\n\r\n                <Col span={ 4 } align=\"right\">\r\n                    <Button\r\n                        shape=\"round\"\r\n                        type=\"danger\"\r\n                        onClick={ salir }\r\n                    >\r\n                        <CloseCircleOutlined/>\r\n                        Salir\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Divider/>\r\n\r\n            {\r\n                ticket && (\r\n                    <Row>\r\n                        <Col>\r\n                            <Text>Está atendiendo el ticket número: </Text>\r\n                            <Text\r\n                                style={{ fontSize: 30 }}\r\n                                type=\"danger\"\r\n                            >\r\n                            { ticket.numero }\r\n                            </Text>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n\r\n            <Row>\r\n                <Col offset={ 18 } span={ 6 } align=\"right\">\r\n                    <Button\r\n                        onClick={ siguienteTicket }\r\n                        shape='round'\r\n                        type='primary'\r\n                    >\r\n                        <RightOutlined />\r\n                        Siguiente\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Layout, Menu } from 'antd';\r\nimport {\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { Ingresar } from './Ingresar';\r\nimport { Cola } from './Cola';\r\nimport { CrearTicket } from './CrearTicket';\r\nimport { Escritorio } from './Escritorio';\r\nimport { UiContext } from '../context/UiContext';\r\n  \r\n\r\nconst { Sider, Content } = Layout;\r\n\r\nexport const RouterPage = () => {\r\n\r\n    const { ocultarMenu } = useContext( UiContext );\r\n\r\n    return (\r\n        <Router>\r\n            <Layout style={{ height: '100vh' }}>\r\n                <Sider \r\n                    collapsedWidth=\"0\"\r\n                    breakpoint=\"md\"\r\n                    hidden={ ocultarMenu }\r\n                    >\r\n                    <div className=\"logo\" />\r\n                    <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n                        <Menu.Item key=\"1\" icon={<UserOutlined />}>\r\n                            <Link to=\"/ingresar\">\r\n                                Ingresar\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\r\n                            <Link to=\"/cola\">\r\n                                Cola de tickets\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"3\" icon={<UploadOutlined />}>\r\n                            <Link to=\"/crear\">\r\n                                Crear tickets\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                </Sider>\r\n                <Layout className=\"site-layout\">\r\n                    <Content\r\n                        className=\"site-layout-background\"\r\n                        style={{\r\n                        margin: '24px 16px',\r\n                        padding: 24,\r\n                        minHeight: 280,\r\n                        }}\r\n                    >\r\n                        <Switch>\r\n                            <Route path=\"/ingresar\" component={ Ingresar }/>\r\n                            <Route path=\"/cola\" component={ Cola }/>\r\n                            <Route path=\"/crear\" component={ CrearTicket }/>\r\n\r\n                            <Route path=\"/escritorio\" component={ Escritorio }/>\r\n                            <Redirect to=\"/ingresar\"/>\r\n                        </Switch>\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { SocketProvider } from './context/SocketContext';\r\nimport { UiProvider } from './context/UiContext';\r\nimport { RouterPage } from './pages/RouterPage';\r\n\r\nexport const TicketApp = () => {\r\n    return (\r\n        <SocketProvider>\r\n            <UiProvider>\r\n                <RouterPage/>\r\n            </UiProvider>\r\n        </SocketProvider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { TicketApp } from './TicketApp';\n\nReactDOM.render(\n    <TicketApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}